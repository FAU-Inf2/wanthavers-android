apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "wanthavers.mad.cs.fau.de.wanthavers_android"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 2
        versionName "1.1"
        multiDexEnabled true
    }

    dexOptions {
        javaMaxHeapSize "4g" //specify the heap size for the dex process
        preDexLibraries = false //delete the already predexed libraries
    }


    signingConfigs {
        release {
            storeFile file("unknown")
            storePassword "unknown"
            keyAlias "unknown"
            keyPassword "unknown"
        }
    }
    buildTypes {
        debug {
            buildConfigField "String", "SERVER_URL", '"http://dev.wanthaver.com"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "SERVER_URL", '"https://faui21f.informatik.uni-erlangen.de:8080"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dataBinding {
        enabled = true
    }
}

preBuild.dependsOn(":wanthavers-common:build")

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:cardview-v7:23.+'
    compile 'com.google.guava:guava:19.0'
    compile files('../../wanthavers-common/build/libs/wanthavers-common.jar')

    compile('org.glassfish.jersey.core:jersey-client:2.22.2') {
        exclude module: 'javax.inject'
    }
    compile('org.glassfish.jersey.ext:jersey-proxy-client:2.22.2') {
        exclude module: 'javax.inject'
    }
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.4'
    compile 'javax.inject:javax.inject:1'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.7.4'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'

    //add dependency to patch application ClassLoader
    compile 'com.android.support:multidex:1.0.0'

    //add dependencies for picasso
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.4.0'

    compile('org.glassfish.jersey.media:jersey-media-multipart:2.23') {
        exclude module: 'javax.inject'
    }

    compile 'com.j256.ormlite:ormlite-android:4.48'

    // cloud-messaging
    compile 'com.google.android.gms:play-services-gcm:9.0.1'
    compile 'com.google.firebase:firebase-messaging:9.0.1'

    compile group: 'commons-io', name: 'commons-io', version: '2.4'

    //google maps
    compile 'com.google.android.gms:play-services-maps:9.0.1'
}


allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}

apply plugin: 'com.google.gms.google-services'